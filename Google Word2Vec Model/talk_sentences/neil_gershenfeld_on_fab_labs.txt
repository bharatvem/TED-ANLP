 This meeting has really been about a digital revolution, but I'd like to argue that it's done; we won. We've had a digital revolution but we don't need to keep having it. And I'd like to look after that, to look what comes after the digital revolution. So, let me start projecting forward. These are some projects I'm involved in today at MIT, looking what comes after computers. This first one, Internet Zero, up here -- this is a web server that has the cost and complexity of an RFID tag -- about a dollar -- that can go in every light bulb and doorknob, and this is getting commercialized very quickly. And what's interesting about it isn't the cost; it's the way it encodes the Internet. It uses a kind of a Morse code for the Internet so you could send it optically; you can communicate acoustically through a power line, through RF. It takes the original principle of the Internet, which is inter-networking computers, and now lets devices inter-network. That we can take the whole idea that gave birth to the Internet and bring it down to the physical world in this Internet Zero, this internet of devices. So this is the next step from there to here, and this is getting commercialized today. A step after that is a project on fungible computers. Fungible goods in economics can be extended and traded. So, half as much grain is half as much useful, but half a baby or half a computer is less useful than a whole baby or a whole computer, and we've been trying to make computers that work that way. So, what you see in the background is a prototype. This was from a thesis of a student, Bill Butow, now at Intel, who wondered why, instead of making bigger and bigger chips, you don't make small chips, put them in a viscous medium, and pour out computing by the pound or by the square inch. And that's what you see here. On the left was postscript being rendered by a conventional computer; on the right is postscript being rendered from the first prototype we made, but there's no frame buffer, IO processor, any of that stuff -- it's just this material. Unlike this screen where the dots are placed carefully, this is a raw material. If you add twice as much of it, you have twice as much display. If you shoot a gun through the middle, nothing happens. If you need more resource, you just apply more computer. So, that's the step after this -- of computing as a raw material. That's still conventional bits, the step after that is -- this is an earlier prototype in the lab; this is high-speed video slowed down. Now, integrating chemistry in computation, where the bits are bubbles. This is showing making bits, this is showing -- once again, slowed down so you can see it, bits interacting to do logic and multiplexing and de-multiplexing. So, now we can compute that the output arranges material as well as information. And, ultimately, these are some slides from an early project I did, computing where the bits are stored quantum-mechanically in the nuclei of atoms, so programs rearrange the nuclear structure of molecules. All of these are in the lab pushing further and further and further, not as metaphor but literally integrating bits and atoms, and they lead to the following recognition. We all know we've had a digital revolution, but what is that? Well, Shannon took us, in the '40s, from here to here: from a telephone being a speaker wire that degraded with distance to the Internet. And he proved the first threshold theorem, that shows if you add information and remove it to a signal, you can compute perfectly with an imperfect device. And that's when we got the Internet. Von Neumann, in the '50s, did the same thing for computing; he showed you can have an unreliable computer but restore its state to make it perfect. This was the last great analog computer at MIT: a differential analyzer, and the more you ran it, the worse the answer got. After Von Neumann, we have the Pentium, where the billionth transistor is as reliable as the first one. But all our fabrication is down in this lower left corner. A state-of-the-art airplane factory rotating metal wax at fixed metal, or you maybe melt some plastic. A 10-billion-dollar chip fab uses a process a village artisan would recognize -- you spread stuff around and bake it. All the intelligence is external to the system; the materials don't have information. Yesterday you heard about molecular biology, which fundamentally computes to build. It's an information processing system. We've had digital revolutions in communication and computation, but precisely the same idea, precisely the same math Shannon and Von Neuman did, hasn't yet come out to the physical world. So, inspired by that, colleagues in this program -- the Center for Bits and Atoms at MIT -- which is a group of people, like me, who never understood the boundary between physical science and computer science. I would even go further and say computer science is one of the worst things that ever happened to either computers or to science -- (Laughter) -- because the canon -- computer science -- many of them are great but the canon of computer science prematurely froze a model of computation based on technology that was available in 1950, and nature's a much more powerful computer than that. So, you'll hear, tomorrow, from Saul Griffith. He was one of the first students to emerge from this program. We started to figure out how you can compute to fabricate. This was just a proof of principle he did of tiles that interact magnetically, where you write a code, much like protein folding, that specifies their structure. So, there's no feedback to a tool metrology; the material itself codes for its structure in just the same ways that protein are fabricated. So, you can, for example, do that. You can do other things. That's in 2D. It works in 3D. The video on the upper right -- I won't show for time -- shows self-replication, templating so something can make something that can make something, and we're doing that now over, maybe, nine orders of magnitude. Those ideas have been used to show the best fidelity and direct rate DNA to make an organism, in functionalizing nanoclusters with peptide tails that code for their assembly -- so, much like the magnets, but now on nanometer scales. Laser micro-machining: essentially 3D printers that digitally fabricate functional systems, all the way up to building buildings, not by having blueprints, but having the parts code for the structure of the building. So, these are early examples in the lab of emerging technologies to digitize fabrication. Computers that don't control tools but computers that are tools, where the output of a program rearranges atoms as well as bits. Now, to do that -- with your tax dollars, thank you -- I bought all these machines. We made a modest proposal to the NSF. We wanted to be able to make anything on any length scale, all in one place, because you can't segregate digital fabrication by a discipline or a length scale. So we put together focused nano beam writers and supersonic water jet cutters and excimer micro-machining systems. But I had a problem. Once I had all these machines, I was spending too much time teaching students to use them. So I started teaching a class, modestly called, "How To Make Almost Anything." And that wasn't meant to be provocative; it was just for a few research students. But the first day of class looked like this. You know, hundreds of people came in begging, all my life I've been waiting for this class; I'll do anything to do it. Then they'd ask, can you teach it at MIT? It seems too useful? And then the next -- (Laughter) -- surprising thing was they weren't there to do research. They were there because they wanted to make stuff. They had no conventional technical background. At the end of a semester they integrated their skills. I'll show an old video. Kelly was a sculptor, and this is what she did with her semester project. (Video): Kelly: Hi, I'm Kelly and this is my scream buddy. Do you ever find yourself in a situation where you really have to scream, but you can't because you're at work, or you're in a classroom, or you're watching your children, or you're in any number of situations where it's just not permitted? Well, scream buddy is a portable space for screaming. When a user screams into scream buddy, their scream is silenced. It is also recorded for later release where, when and how the user chooses. (Scream) (Laughter) (Applause) So, Einstein would like this. This student made a web browser for parrots -- lets parrots surf the Net and talk to other parrots. This student's made an alarm clock you wrestle to prove you're awake; this is one that defends -- a dress that defends your personal space. This isn't technology for communication; it's technology to prevent it. This is a device that lets you see your music. This is a student who made a machine that makes machines, and he made it by making Lego bricks that do the computing. Just year after year -- and I finally realized the students were showing the killer app of personal fabrication is products for a market of one person. You don't need this for what you can get in Wal-Mart; you need this for what makes you unique. Ken Olsen famously said, nobody needs a computer in the home. But you don't use it for inventory and payroll; DEC is now twice bankrupt. You don't need personal fabrication in the home to buy what you can buy because you can buy it. You need it for what makes you unique, just like personalization. So, with that, in turn, 20 million dollars today does this; 20 years from now we'll make Star Trek replicators that make anything. The students hijacked all the machines I bought to do personal fabrication. Today, when you spend that much of your money, there's a government requirement to do outreach, which often means classes at a local school, a website -- stuff that's just not that exciting. So, I made a deal with my NSF program managers that instead of talking about it, I'd give people the tools. This wasn't meant to be provocative or important, but we put together these Fab Labs. It's about 20,000 dollars in equipment that approximate both what the 20 million dollars does and where it's going. A laser cutter to do press-fit assembly with 3D from 2D, a sign cutter to plot in copper to do electromagnetics, a micron scale, numerically-controlled milling machine for precise structures, programming tools for less than a dollar, 100-nanosecond microcontrollers. It lets you work from microns and microseconds on up, and they exploded around the world. This wasn't scheduled, but they went from inner-city Boston to Pobal in India, to Secondi-Takoradi on Ghana's coast to Soshanguve in a township in South Africa, to the far north of Norway, uncovering, or helping uncover, for all the attention to the digital divide, we would find unused computers in all these places. A farmer in a rural village -- a kid needs to measure and modify the world, not just get information about it on a screen. That there's really a fabrication and an instrumentation divide bigger than the digital divide. And the way you close it is not IT for the masses but IT development for the masses. So, in place after place we saw this same progression: that we'd open one of these Fab Labs, where we didn't -- this is too crazy to think of. We didn't think this up, that we would get pulled to these places; we'd open it. The first step was just empowerment. You can see it in their face, just this joy of, I can do it. This is a girl in inner-city Boston who had just done a high-tech on-demand craft sale in the inner city community center. It goes on from there to serious hands-on technical education informally, out of schools. In Ghana we had set up one of these labs. We designed a network sensor, and kids would show up and refuse to leave the lab. There was a girl who insisted we stay late at night -- (Video): Kids: I love the Fab Lab. -- her first night in the lab because she was going to make the sensor. So she insisted on fabbing the board, learning how to stuff it, learning how to program it. She didn't really know what she was doing or why she was doing it, but she knew she just had to do it. There was something electric about it. This is late at, you know, 11 o'clock at night and I think I was the only person surprised when what she built worked the first time. And I've shown this to engineers at big companies, and they say they can't do this. Any one thing she's doing, they can do better, but it's distributed over many people and many sites and they can't do in an afternoon what this little girl in rural Ghana is doing. (Video): Girl: My name is Valentina Kofi; I am eight years old. I made a stacking board. And, again, that was just for the joy of it. Then these labs started doing serious problem solving -- instrumentation for agriculture in India, steam turbines for energy conversion in Ghana, high-gain antennas in thin client computers. And then, in turn, businesses started to grow, like making these antennas. And finally, the lab started doing invention. We're learning more from them than we're giving them. I was showing my kids in a Fab Lab how to use it. They invented a way to do a construction kit out of a cardboard box -- which, as you see up there, that's becoming a business -- but their design was better than Saul's design at MIT, so there's now three students at MIT doing their theses on scaling the work of eight-year-old children because they had better designs. Real invention is happening in these labs. And I still kept -- so, in the last year I've been spending time with heads of state and generals and tribal chiefs who all want this, and I keep saying, but this isn't the real thing. Wait, like, 20 years and then we'll be done. And I finally got what's been going on. This is Kernigan and Ritchie inventing UNIX on a PDP. PDPs came between mainframes and minicomputers. They were tens of thousands of dollars, hard to use, but they brought computing down to work groups, and everything we do today happened there. These Fab Labs are the cost and complexity of a PDP. The projection of digital fabrication isn't a projection for the future; we are now in the PDP era. We talked in hushed tones about the great discoveries then. It was very chaotic, it wasn't, sort of, clear what was going on. In the same sense we are now, today, in the minicomputer era of digital fabrication. The only problem with that is it breaks everybody's boundaries. In DC, I go to every agency that wants to talk, you know; in the Bay Area, I go to every organization you can think of -- they all want to talk about it, but it breaks their organizational boundaries. In fact, it's illegal for them, in many cases, to equip ordinary people to create rather than consume technology. And that problem is so severe that the ultimate invention coming from this community surprised me: it's the social engineering. That the lab in far north of Norway -- this is so far north its satellite dishes look at the ground rather than the sky because that's where the satellites are -- the lab outgrew the little barn that it was in. It was there because they wanted to find animals in the mountains but it outgrew it, so they built this extraordinary village for the lab. This isn't a university; it's not a company. It's essentially a village for invention; it's a village for the outliers in society, and those have been growing up around these Fab Labs all around the world. So this program has split into an NGO foundation, a Fab Foundation to support the scaling, a micro VC fund. The person who runs it nicely describes it as "machines that make machines need businesses that make businesses:" it's a cross between micro-finance and VC to do fan-out, and then the research partnerships back at MIT for what's making it possible. So I'd like to leave you with two thoughts. There's been a sea change in aid, from top-down mega-projects to bottom-up, grassroots, micro-finance investing in the roots, so that everybody's got that that's what works. But we still look at technology as top-down mega-projects. Computing, communication, energy for the rest of the planet are these top-down mega-projects. If this room full of heroes is just clever enough, you can solve the problems. The message coming from the Fab Labs is that the other five billion people on the planet aren't just technical sinks; they're sources. The real opportunity is to harness the inventive power of the world to locally design and produce solutions to local problems. I thought that's the projection 20 years hence into the future, but it's where we are today. It breaks every organizational boundary we can think of. The hardest thing at this point is the social engineering and the organizational engineering, but it's here today. And, finally, any talk like this on the future of computing is required to show Moore's law, but my favorite version -- this is Gordon Moore's original one from his original paper -- and what's happened is, year after year after year, we've scaled and we've scaled and we've scaled and we've scaled, and we've scaled and we've scaled, and we've scaled and we've scaled, and there's this looming bug of what's going to happen at the end of Moore's law; this ultimate bug is coming. But we're coming to appreciate, is the transition from 2D to 3D, from programming bits to programming atoms, turns the ends of Moore's law scaling from the ultimate bug to the ultimate feature. So, we're just at the edge of this digital revolution in fabrication, where the output of computation programs the physical world. So, together, these two projects answer questions I hadn't asked carefully. The class at MIT shows the killer app for personal fabrication in the developed world is technology for a market of one: personal expression in technology that touches a passion unlike anything I've seen in technology for a very long time. And the killer app for the rest of the planet is the instrumentation and the fabrication divide: people locally developing solutions to local problems. Thank you.